@using ToDoList.Frontend.Views
@using ToDoList.Frontend.Clients

@page "/addToDoItem"
@inject NavigationManager NavigationManager
@inject IToDoItemsClient ToDoItemsClient
@rendermode InteractiveServer

<PageTitle>New ToDoItem</PageTitle>



    <h1>New ToDoItem</h1>
    <EditForm Model="ToDoItem" OnValidSubmit="Submit" class="form-horizontal">
         <DataAnnotationsValidator />
         <ValidationSummary />
        <div class="form-group row mb-3">
            <label for="Name" class="col-sm-2 col-form-label">Name</label>
            <div class="col-sm-10">
                <InputText id="Name" class="form-control" @bind-Value="ToDoItem.Name" />
                <ValidationMessage For="@(() => ToDoItem.Name)" />
            </div>
        </div>

        <div class="form-group row mb-3">
            <label for="Description" class="col-sm-2 col-form-label">Description</label>
            <div class="col-sm-10">
                <InputText id="Description" class="form-control" @bind-Value="ToDoItem.Description" />
            </div>
        </div>

        <div class="form-group row mb-3">
            <label for="Category" class="col-sm-2 col-form-label">Category</label>
            <div class="col-sm-10">
                <InputText id="Category" class="form-control" @bind-Value="ToDoItem.Category" />
                <ValidationMessage For="@(() => ToDoItem.Category)" />
            </div>
        </div>

        <div class="form-group row">
            <div class="col-sm-10 offset-sm-2">
                <button type="submit" class="btn btn-success mt-3">Submit</button>
            </div>
        </div>
    </EditForm>


@code
{
    private ToDoItemView ToDoItem { get; set; } = new ToDoItemView();
    public async Task Submit()
    {
        await ToDoItemsClient.CreateItemAsync(ToDoItem);
        NavigationManager.NavigateTo("/");
    }
}


