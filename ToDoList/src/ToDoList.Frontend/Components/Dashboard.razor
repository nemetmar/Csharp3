@using ToDoList.Frontend.Clients
@using ToDoList.Frontend.Views
@inject IToDoItemsClient ToDoItemsClient
@rendermode InteractiveServer

<h1>Dashboard</h1>



<table>
    <thead>
        <tr>
            <th @onclick="SortItemsById">Id <span class="sort-arrows">&#9650; &#9660;</span></th>
            <th @onclick="SortItemsByName">Name <span class="sort-arrows">&#9650; &#9660;</span></th>
            <th @onclick="SortItemsByIsCompleted">Is completed <span class="sort-arrows">&#9650; &#9660;</span></th>
            <th>Description</th>
            <th>Category</th>
        </tr>
    </thead>

    @if(toDoItems is null)
    {
        <p>Načítám.....</p>
    }

    @if(toDoItems is not null)
    {
        @foreach(var toDoItem in toDoItems)
        {
            <tbody>
                <tr>
                    <td>@toDoItem.ToDoItemId</td>
                    <td>@toDoItem.Name</td>
                    <td>@(toDoItem.IsCompleted ? "Yes" : "No")</td>
                    <td>@toDoItem.Description</td>
                    <td>@toDoItem.Category</td>
                </tr>
            </tbody>
        }
    }

</table>


@code
{
    protected override async Task OnInitializedAsync()
    {
        toDoItems = await ToDoItemsClient.ReadItemsAsync();
    }
    private List<ToDoItemView>? toDoItems;


     private string sortOrderId = "desc";
     private string sortOrderName = "desc";
     private string sortOrderIsCompleted = "desc";

    private void SortItemsByName()
    {
        sortOrderName = sortOrderName == "asc" ? "desc" : "asc";
        SortItems(i => i.Name, sortOrderName);
    }
    private void SortItemsById()
    {
        sortOrderId = sortOrderId == "asc" ? "desc" : "asc";
        SortItems(i => i.ToDoItemId, sortOrderId);
    }
    private void SortItemsByIsCompleted()
    {
         sortOrderIsCompleted = sortOrderIsCompleted == "asc" ? "desc" : "asc";
         SortItems(i => i.IsCompleted, sortOrderIsCompleted);
    }

    private void SortItems<TKey>(Func<ToDoItemView, TKey> keySelector, string sortOrder)
    {
        if (sortOrder == "asc")
        {
            toDoItems = toDoItems?.OrderBy(keySelector).ToList();
        }
        else
        {
            toDoItems = toDoItems?.OrderByDescending(keySelector).ToList();
        }
    }
}
