@rendermode InteractiveServer

<h1>Dashboard</h1>



<table>
    <thead>
        <tr>
            <th @onclick="SortItemsById">Id <span class="sort-arrows">&#9650; &#9660;</span></th>
            <th @onclick="SortItemsByName">Name <span class="sort-arrows">&#9650; &#9660;</span></th>
            <th @onclick="SortItemsByIsCompleted">Is completed <span class="sort-arrows">&#9650; &#9660;</span></th>
            <th>Description</th>
        </tr>
    </thead>
    @foreach(var toDoItem in toDoItems)
    {
        <tbody>
            <tr>
                <td>@toDoItem.ToDoItemId</td>
                <td>@toDoItem.Name</td>
                <td>@(toDoItem.IsCompleted ? "Yes" : "No")</td>
                <td>@toDoItem.Description</td>
            </tr>
        </tbody>
    }
</table>


@code
{
    private List<ToDoItemView> toDoItems = [
        new ToDoItemView() {ToDoItemId = 1, Name = "Udělat ukol Czechitas", IsCompleted = false},
        new ToDoItemView() {ToDoItemId = 2, Name = "Czechitas Udělat nepovinny ukol Czechitas", IsCompleted = false, Description = "Trololo Ayoyo Wololo!"},
        new ToDoItemView() {ToDoItemId = 3, Name = "Hehe Udělat ukol Czechitas", IsCompleted = true},
    ];
    public class ToDoItemView
    {

        public int ToDoItemId { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public bool IsCompleted { get; set; }
    }

     private string sortOrderId = "desc";
     private string sortOrderName = "desc";
     private string sortOrderIsCompleted = "desc";

    private void SortItemsByName()
    {
        sortOrderName = sortOrderName == "asc" ? "desc" : "asc";
        SortItems(i => i.Name, sortOrderName);
    }
    private void SortItemsById()
    {
        sortOrderId = sortOrderId == "asc" ? "desc" : "asc";
        SortItems(i => i.ToDoItemId, sortOrderId);
    }
    private void SortItemsByIsCompleted()
    {
         sortOrderIsCompleted = sortOrderIsCompleted == "asc" ? "desc" : "asc";
         SortItems(i => i.IsCompleted, sortOrderIsCompleted);
    }

    private void SortItems<TKey>(Func<ToDoItemView, TKey> keySelector, string sortOrder)
    {
        if (sortOrder == "asc")
        {
            toDoItems = toDoItems.OrderBy(keySelector).ToList();
        }
        else
        {
            toDoItems = toDoItems.OrderByDescending(keySelector).ToList();
        }
    }
}
